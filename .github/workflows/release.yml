# Release Workflow
name: Release

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'

jobs:
  release:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'release/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Build project
      run: npm run build
      
    - name: Extract version from branch
      id: extract_version
      run: |
        VERSION=$(echo "${{ github.event.head_commit.message }}" | grep -oP 'release/v\K[0-9]+\.[0-9]+\.[0-9]+')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ steps.extract_version.outputs.version }}
        release_name: Release v${{ steps.extract_version.outputs.version }}
        body: |
          Changes in this Release
          - Auto-generated from release branch merge
        draft: false
        prerelease: false
        
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      if: success()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./dist
        
    - name: Notify team
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createDispatchEvent({
            owner: context.repo.owner,
            repo: context.repo.repo,
            event_type: 'release-deployed',
            client_payload: {
              version: '${{ steps.extract_version.outputs.version }}',
              url: 'https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}'
            }
          })
